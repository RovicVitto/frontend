{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\Documents\\\\spist-online-learning-hub\\\\frontend\\\\src\\\\components\\\\QuizSubject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './QuizSubject.css'; // Import the updated CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizSubject = ({\n  category,\n  questions,\n  onBack\n}) => {\n  _s();\n  const [availableQuestions, setAvailableQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n\n  // Shuffle the questions whenever the quiz starts\n  useEffect(() => {\n    if (questions.length > 0) {\n      const shuffledQuestions = [...questions].sort(() => Math.random() - 0.5); // Shuffle questions randomly\n      setAvailableQuestions(shuffledQuestions); // Set shuffled questions as the pool\n      getNextQuestion(shuffledQuestions); // Get the first question from the shuffled list\n    }\n  }, [questions]);\n  const getNextQuestion = questionPool => {\n    if (questionPool.length === 0) {\n      setCurrentQuestion(null);\n      return;\n    }\n\n    // Randomly select a question from the pool and remove it from available questions\n    const randomIndex = Math.floor(Math.random() * questionPool.length);\n    const next = questionPool[randomIndex];\n    setCurrentQuestion(next);\n    setAvailableQuestions(prev => prev.filter((_, i) => i !== randomIndex));\n    setSelectedAnswer('');\n    setFeedback('');\n  };\n  const handleSubmit = () => {\n    if (!selectedAnswer) return;\n    if (selectedAnswer === currentQuestion.answer) {\n      setScore(score + 1); // Increment score for correct answer\n      setQuestionCount(questionCount + 1); // Increment question count\n      setFeedback('Correct!'); // Provide feedback\n    } else {\n      setFeedback('Incorrect! Your final score is: ' + score); // Feedback on incorrect answer\n      setCurrentQuestion(null); // End the quiz on incorrect answer\n    }\n    setTimeout(() => {\n      // Continue if correct, stop if incorrect\n      if (selectedAnswer === currentQuestion.answer) {\n        getNextQuestion(availableQuestions);\n      }\n    }, 1000); // Wait 1 second before showing the next question\n  };\n\n  // If the quiz ends (no question left or incorrect answer)\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [category, \" Quiz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Quiz finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: onBack,\n        children: \"\\u2190 Back to Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-title\",\n      children: [category, \" Quiz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Question \", questionCount + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-options\",\n        children: currentQuestion.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"quiz\",\n            value: option,\n            checked: selectedAnswer === option,\n            onChange: () => setSelectedAnswer(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), option]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: onBack,\n      children: \"\\u2190 Back to Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizSubject, \"EsnqeTQePX9XmR0vl1VRskiYPos=\");\n_c = QuizSubject;\nexport default QuizSubject;\nvar _c;\n$RefreshReg$(_c, \"QuizSubject\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizSubject","category","questions","onBack","_s","availableQuestions","setAvailableQuestions","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","score","setScore","questionCount","setQuestionCount","feedback","setFeedback","length","shuffledQuestions","sort","Math","random","getNextQuestion","questionPool","randomIndex","floor","next","prev","filter","_","i","handleSubmit","answer","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","option","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/sebas/Documents/spist-online-learning-hub/frontend/src/components/QuizSubject.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './QuizSubject.css'; // Import the updated CSS\r\n\r\nconst QuizSubject = ({ category, questions, onBack }) => {\r\n  const [availableQuestions, setAvailableQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [questionCount, setQuestionCount] = useState(0);\r\n  const [feedback, setFeedback] = useState('');\r\n\r\n  // Shuffle the questions whenever the quiz starts\r\n  useEffect(() => {\r\n    if (questions.length > 0) {\r\n      const shuffledQuestions = [...questions].sort(() => Math.random() - 0.5); // Shuffle questions randomly\r\n      setAvailableQuestions(shuffledQuestions); // Set shuffled questions as the pool\r\n      getNextQuestion(shuffledQuestions); // Get the first question from the shuffled list\r\n    }\r\n  }, [questions]);\r\n\r\n  const getNextQuestion = (questionPool) => {\r\n    if (questionPool.length === 0) {\r\n      setCurrentQuestion(null);\r\n      return;\r\n    }\r\n\r\n    // Randomly select a question from the pool and remove it from available questions\r\n    const randomIndex = Math.floor(Math.random() * questionPool.length);\r\n    const next = questionPool[randomIndex];\r\n    setCurrentQuestion(next);\r\n    setAvailableQuestions(prev => prev.filter((_, i) => i !== randomIndex));\r\n    setSelectedAnswer('');\r\n    setFeedback('');\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!selectedAnswer) return;\r\n\r\n    if (selectedAnswer === currentQuestion.answer) {\r\n      setScore(score + 1); // Increment score for correct answer\r\n      setQuestionCount(questionCount + 1); // Increment question count\r\n      setFeedback('Correct!'); // Provide feedback\r\n    } else {\r\n      setFeedback('Incorrect! Your final score is: ' + score); // Feedback on incorrect answer\r\n      setCurrentQuestion(null); // End the quiz on incorrect answer\r\n    }\r\n\r\n    setTimeout(() => {\r\n      // Continue if correct, stop if incorrect\r\n      if (selectedAnswer === currentQuestion.answer) {\r\n        getNextQuestion(availableQuestions);\r\n      }\r\n    }, 1000); // Wait 1 second before showing the next question\r\n  };\r\n\r\n  // If the quiz ends (no question left or incorrect answer)\r\n  if (!currentQuestion) {\r\n    return (\r\n      <div className=\"quiz-page\">\r\n        <h2>{category} Quiz</h2>\r\n        <p>Quiz finished!</p>\r\n        <p>Your Score: {score}</p>\r\n        <button className=\"back-btn\" onClick={onBack}>← Back to Categories</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-page\">\r\n      <h2 className=\"quiz-title\">{category} Quiz</h2>\r\n      <p>Score: {score}</p>\r\n      <p>Question {questionCount + 1}</p>\r\n      <div className=\"quiz-question\">\r\n        <p><strong>{currentQuestion.question}</strong></p>\r\n        <div className=\"quiz-options\">\r\n          {currentQuestion.options.map((option, i) => (\r\n            <label key={i}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"quiz\"\r\n                value={option}\r\n                checked={selectedAnswer === option}\r\n                onChange={() => setSelectedAnswer(option)}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button className=\"submit-btn\" onClick={handleSubmit}>Submit</button>\r\n        {feedback && <p className=\"feedback\">{feedback}</p>}\r\n      </div>\r\n      <button className=\"back-btn\" onClick={onBack}>← Back to Categories</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizSubject;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}