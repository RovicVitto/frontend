{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\Documents\\\\spist-online-learning-hub\\\\frontend\\\\src\\\\components\\\\QuizSection.js\";\nimport React from 'react';\nimport './QuizSection.css'; // CSS for styling\nimport quizData from '../data/questions'; // ✅ Import question data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = ['STEM', 'ABM', 'HUMSS', 'TVL-ICT', 'TVL-FBS/COOKERY'];\n\n// ✅ Utility function to get random questions\nconst getRandomQuestions = (category, count = 3) => {\n  const questions = quizData[category] || []; // Default to empty array if no questions for the category\n  const shuffled = [...questions].sort(() => 0.5 - Math.random()); // Shuffle questions\n  return shuffled.slice(0, count); // Return the top 'count' random questions\n};\nconst QuizSection = ({\n  onSelectCategory\n}) => {\n  // ✅ Handle category click and pass questions to the parent\n  const handleCategoryClick = category => {\n    const randomQuestions = getRandomQuestions(category); // Get random questions for the selected category\n    onSelectCategory(category, randomQuestions); // Pass category and questions to the parent\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Quiz Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-grid\",\n      children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-card\",\n        onClick: () => handleCategoryClick(category) // Trigger onClick for category selection\n        ,\n        children: [category, \"  \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = QuizSection;\nexport default QuizSection;\nvar _c;\n$RefreshReg$(_c, \"QuizSection\");","map":{"version":3,"names":["React","quizData","jsxDEV","_jsxDEV","categories","getRandomQuestions","category","count","questions","shuffled","sort","Math","random","slice","QuizSection","onSelectCategory","handleCategoryClick","randomQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sebas/Documents/spist-online-learning-hub/frontend/src/components/QuizSection.js"],"sourcesContent":["import React from 'react';\r\nimport './QuizSection.css'; // CSS for styling\r\nimport quizData from '../data/questions'; // ✅ Import question data\r\n\r\nconst categories = ['STEM', 'ABM', 'HUMSS', 'TVL-ICT', 'TVL-FBS/COOKERY'];\r\n\r\n// ✅ Utility function to get random questions\r\nconst getRandomQuestions = (category, count = 3) => {\r\n  const questions = quizData[category] || [];  // Default to empty array if no questions for the category\r\n  const shuffled = [...questions].sort(() => 0.5 - Math.random()); // Shuffle questions\r\n  return shuffled.slice(0, count);  // Return the top 'count' random questions\r\n};\r\n\r\nconst QuizSection = ({ onSelectCategory }) => {\r\n\r\n  // ✅ Handle category click and pass questions to the parent\r\n  const handleCategoryClick = (category) => {\r\n    const randomQuestions = getRandomQuestions(category); // Get random questions for the selected category\r\n    onSelectCategory(category, randomQuestions); // Pass category and questions to the parent\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h2>Select a Quiz Category</h2>\r\n      <div className=\"category-grid\">\r\n        {categories.map((category, index) => (\r\n          <div \r\n            key={index} \r\n            className=\"category-card\"\r\n            onClick={() => handleCategoryClick(category)} // Trigger onClick for category selection\r\n          >\r\n            {category}  {/* Display category name */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizSection;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAC;AAC5B,OAAOC,QAAQ,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,CAAC;;AAEzE;AACA,MAAMC,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,GAAG,CAAC,KAAK;EAClD,MAAMC,SAAS,GAAGP,QAAQ,CAACK,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAE;EAC7C,MAAMG,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC,CAACE,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,OAAOH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEN,KAAK,CAAC,CAAC,CAAE;AACpC,CAAC;AAED,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAE5C;EACA,MAAMC,mBAAmB,GAAIV,QAAQ,IAAK;IACxC,MAAMW,eAAe,GAAGZ,kBAAkB,CAACC,QAAQ,CAAC,CAAC,CAAC;IACtDS,gBAAgB,CAACT,QAAQ,EAAEW,eAAe,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BpB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bf,UAAU,CAACoB,GAAG,CAAC,CAAClB,QAAQ,EAAEmB,KAAK,kBAC9BtB,OAAA;QAEEe,SAAS,EAAC,eAAe;QACzBQ,OAAO,EAAEA,CAAA,KAAMV,mBAAmB,CAACV,QAAQ,CAAE,CAAC;QAAA;QAAAa,QAAA,GAE7Cb,QAAQ,EAAC,IAAE;MAAA,GAJPmB,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAxBIb,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}